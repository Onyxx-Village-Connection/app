import 'dart:async';

import 'package:geoflutterfire/geoflutterfire.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:google_maps_flutter/google_maps_flutter.dart';
import 'package:flutter/material.dart';
import 'package:geolocator/geolocator.dart';
import 'package:ovcapp/assets/ovcicons.dart';
import 'package:ovcapp/screens/map/services/geolocator_service.dart';
import 'package:provider/provider.dart';

class MapScreen extends StatelessWidget {
  final geoService = GeolocatorService();

  @override
  Widget build(BuildContext context) {
    return FutureProvider(
      initialData: null,
      create: (context) => geoService.getInitialLocation(),
      child: MaterialApp(
        debugShowCheckedModeBanner: false,
        title: 'Flutter Demo',
        theme: ThemeData(
          primarySwatch: Colors.blue,
        ),
        home: Consumer<Position?>(
          builder: (context, position, widget) {
            return (position != null)
                ? Map(position)
                : Center(child: CircularProgressIndicator());
          },
        ),
      ),
    );
  }
}

class Map extends StatefulWidget {
  final Position initialPosition;

  Map(this.initialPosition);

  @override
  State createState() => _MapState();
}

class _MapState extends State {
  FirebaseFirestore firestore = FirebaseFirestore.instance;
  Geoflutterfire geo = Geoflutterfire();

  final GeolocatorService geoService = GeolocatorService();
  Completer _controller = Completer();

  //want to use custom marker from 'lib/assets' folder (round airport shuttle)
  //but keep running into errors
  //late initialization error: might have to use some sort of future init?
  @override
  Widget build(BuildContext context) {
    Set<Marker> getMarker() {
      return <Marker>[
        Marker(
          markerId: MarkerId('id-1'),
          position: LatLng(37.466089, -122.156659),
          infoWindow: InfoWindow(
            title: 'Onyxx Village Connection', //volunteer name
            snippet: 'Food, resources, and compassion',
          ),
        )
      ].toSet();
    }

    return Scaffold(
      appBar: AppBar(
        leading: IconButton(
            onPressed: () => Navigator.of(context).pop(),
            icon: Icon(OVCIcons.backicon),
            color: Color(0xFFE0CB8F)),
        title: Text(
          'Volunteer Map',
          style: TextStyle(
              fontFamily: 'BigShouldersDisplay',
              fontSize: 25.0,
              fontWeight: FontWeight.w700,
              color: Color(0xFFE0CB8F)),
        ),
        centerTitle: true,
        backgroundColor: Colors.black,
      ),
      body: Center(
        child: GoogleMap(
          markers: getMarker(),
          initialCameraPosition: CameraPosition(
              target: LatLng(37.466089, -122.156659), zoom: 17.0),
          mapType: MapType.normal,
          myLocationEnabled: true,
          zoomControlsEnabled: false,
          onMapCreated: (GoogleMapController controller) {
            _controller.complete(controller);
          },
        ),
      ),
    );
  }

  //been wanting to implement this to insert into database but having trouble
  //setting up a stream that runs this every time a new position is detected.
/*
    Position pos = await Geolocator.getCurrentPosition();
    GeoFirePoint point =
        geo.point(latitude: position.latitude, longitude: position.longitude);
    return firestore.collection('locations').add({
      'name': 'volunteer name here', //insert current user account info?
      'itemName': 'item name here',
      'jobType': 'pickup or delivery here',
      'isOnline':
          'true', //turn off marker visibility or turn off tracking via if statement when false?
      'geoHash': point, //generated by GeoFirePoint function
    });
*/

}
